name: Android Production Build

on:
  workflow_dispatch:

jobs:
  Play_Store_Build:
    runs-on: ubuntu-latest
    env:
      KEYSIGNPASSWORD: ${{ secrets.KEYSIGNPASSWORD }}
      KEYSIGNALIAS: ${{ secrets.KEYSIGNALIAS }}
      KEYSIGNALIASPASSWORD: ${{ secrets.KEYSIGNALIASPASSWORD }}

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: "16"
          distribution: "temurin"
          cache: gradle

      - name: getting google-services.json (1)
        id: GOOGLE_SERVICES_JSON_APP_FOLDER
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: "google-services.json"
          fileDir: "./app/"
          encodedString: ${{ secrets.GOOGLE_SERVICES_JSON_APP_FOLDER }}

      - name: getting google-services.json (2)
        id: GOOGLE_SERVICES_JSON_DEBUG
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: "google-services.json"
          fileDir: "./app/debug/"
          encodedString: ${{ secrets.GOOGLE_SERVICES_JSON_DEBUG }}

      - name: getting google-services.json (3)
        id: GOOGLE_SERVICES_JSON_RELEASE
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: "google-services.json"
          fileDir: "./app/release/"
          encodedString: ${{ secrets.GOOGLE_SERVICES_JSON_RELEASE }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Play Store
      - name: Building Play Store Version
        run: ./gradlew assemblePlayStoreRelease bundlePlayStoreRelease --stacktrace
        env:
          debug_url_callnow: ${{ secrets.DEBUG_URL_CALLNOW }}
          url_callnow: ${{ secrets.URL_CALLNOW }}
          debug_url_getprofile: ${{ secrets.DEBUG_URL_GETPROFILE }}
          url_getprofile: ${{ secrets.URL_GETPROFILE }}
          debug_url_ping: ${{ secrets.DEBUG_URL_PING }}
          url_ping: ${{ secrets.URL_PING }}
          url_synccontact: ${{ secrets.URL_CONTACTSYNC }}
          debug_url_synccontact: ${{ secrets.DEBUG_CONTACTSYNC_URL }}
          admob_app_id: ${{ secrets.ADMOB_APP_ID }}
          admob_ad_int_id: ${{ secrets.ADMOB_AD_INT_ID }}
          admob_ad_banner_id1: ${{ secrets.ADMOB_AD_BANNER_ID1 }}
          admob_native_ad1: ${{ secrets.AD_NATIVE1 }}
          debug_apprtc_url: ${{ secrets.DEBUG_APPRTC_URL }}
          apprtc_url: ${{ secrets.APPRTC_URL }}
          msAppCenterKey: ${{ secrets.MS_APP_CENTER_KEY }}
          debug_twilio_config_url: ${{ secrets.DEBUG_TWILIO_CONFIG_URL }}
          twilio_config_url: ${{ secrets.TWILIO_CONFIG_URL }}

#      - uses: r0adkll/sign-android-release@v1
#        name: Signing Play Store APK
#        with:
#          releaseDirectory: app/build/outputs/apk/PlayStore/release/
#          signingKeyBase64: ${{ secrets.SIGN_KEY_BASE64 }}
#          alias: ${{ secrets.KEYSIGNALIAS }}
#          keyStorePassword: ${{ secrets.KEYSIGNALIASPASSWORD }}
#          keyPassword: ${{ secrets.KEYSIGNPASSWORD }}

 #     - uses: r0adkll/sign-android-release@v1
 #       name: Signing Play Store AAB
#        with:
#          releaseDirectory: app/build/outputs/bundle/PlayStoreRelease/
#          signingKeyBase64: ${{ secrets.SIGN_KEY_BASE64 }}
#          alias: ${{ secrets.KEYSIGNALIAS }}
#          keyStorePassword: ${{ secrets.KEYSIGNALIASPASSWORD }}
#          keyPassword: ${{ secrets.KEYSIGNPASSWORD }}



      - name: upload artifact to Firebase App Distribution (APK)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: github
          file: app/build/outputs/apk/PlayStore/release/app-PlayStore-release-unsigned-signed.apk

      - name: upload artifact to Firebase App Distribution (AAB)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: github
          file: app/build/outputs/bundle/PlayStoreRelease/app-PlayStore-release.aab


      # Upload Build APK & Bundles
      - uses: actions/upload-artifact@v2
        name: Upload APK & Bundles
        with:
          name: Play Store Android Build APK AAR
          path: |
           app/build/outputs/apk/PlayStore/release/app-PlayStore-release-unsigned-signed.apk
           app/build/outputs/bundle/PlayStoreRelease/app-PlayStore-release.aab
#==
  Galaxy_Store_Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: gradle

      - name: getting google-services.json (1)
        id: GOOGLE_SERVICES_JSON_APP_FOLDER
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: "google-services.json"
          fileDir: "./app/"
          encodedString: ${{ secrets.GOOGLE_SERVICES_JSON_APP_FOLDER }}

      - name: getting google-services.json (2)
        id: GOOGLE_SERVICES_JSON_DEBUG
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: "google-services.json"
          fileDir: "./app/debug/"
          encodedString: ${{ secrets.GOOGLE_SERVICES_JSON_DEBUG }}

      - name: getting google-services.json (3)
        id: GOOGLE_SERVICES_JSON_RELEASE
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: "google-services.json"
          fileDir: "./app/release/"
          encodedString: ${{ secrets.GOOGLE_SERVICES_JSON_RELEASE }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

     # Galaxy Store
      - name: Building Galaxy Store Version
        run: ./gradlew assembleGalaxyStoreRelease bundleGalaxyStoreRelease --stacktrace
        env:
          debug_url_callnow: ${{ secrets.DEBUG_URL_CALLNOW }}
          url_callnow: ${{ secrets.URL_CALLNOW }}
          debug_url_getprofile: ${{ secrets.DEBUG_URL_GETPROFILE }}
          url_getprofile: ${{ secrets.URL_GETPROFILE }}
          debug_url_ping: ${{ secrets.DEBUG_URL_PING }}
          url_ping: ${{ secrets.URL_PING }}
          url_synccontact: ${{ secrets.URL_CONTACTSYNC }}
          debug_url_synccontact: ${{ secrets.DEBUG_CONTACTSYNC_URL }}
          admob_app_id: ${{ secrets.ADMOB_APP_ID }}
          admob_ad_int_id: ${{ secrets.ADMOB_AD_INT_ID }}
          admob_ad_banner_id1: ${{ secrets.ADMOB_AD_BANNER_ID1 }}
          admob_native_ad1: ${{ secrets.AD_NATIVE1 }}
          debug_apprtc_url: ${{ secrets.DEBUG_APPRTC_URL }}
          apprtc_url: ${{ secrets.APPRTC_URL }}
          msAppCenterKey: ${{ secrets.MS_APP_CENTER_KEY }}
          debug_twilio_config_url: ${{ secrets.DEBUG_TWILIO_CONFIG_URL }}
          twilio_config_url: ${{ secrets.TWILIO_CONFIG_URL }}


      - uses: r0adkll/sign-android-release@v1
        name: Signing Galaxy Store AAB
        with:
          releaseDirectory: app/build/outputs/bundle/GalaxyStoreRelease/
          signingKeyBase64: ${{ secrets.SIGN_KEY_BASE64 }}
          alias: ${{ secrets.KEYSIGNALIAS }}
          keyStorePassword: ${{ secrets.KEYSIGNALIASPASSWORD }}
          keyPassword: ${{ secrets.KEYSIGNPASSWORD }}

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/GalaxyStore/release/
          signingKeyBase64: ${{ secrets.SIGN_KEY_BASE64 }}
          alias: ${{ secrets.KEYSIGNALIAS }}
          keyStorePassword: ${{ secrets.KEYSIGNALIASPASSWORD }}
          keyPassword: ${{ secrets.KEYSIGNPASSWORD }}


      - name: upload artifact to Firebase App Distribution (APK)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: github
          file: app/build/outputs/apk/GalaxyStore/release/app-GalaxyStore-release-unsigned-signed.apk

      - name: upload artifact to Firebase App Distribution (AAB)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: github
          file: app/build/outputs/bundle/GalaxyStoreRelease/app-GalaxyStore-release.aab


      # Upload Build APK & Bundles
      - uses: actions/upload-artifact@v2
        name: Upload APK & Bundles
        with:
          name: Galaxy Store Android Build APK AAR
          path: |
           app/build/outputs/apk/GalaxyStore/release/app-GalaxyStore-release-unsigned-signed.apk
           app/build/outputs/bundle/GalaxyStoreRelease/app-GalaxyStore-release.aab


  Universal_App_Version_Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: gradle

      - name: getting google-services.json (1)
        id: GOOGLE_SERVICES_JSON_APP_FOLDER
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: "google-services.json"
          fileDir: "./app/"
          encodedString: ${{ secrets.GOOGLE_SERVICES_JSON_APP_FOLDER }}

      - name: getting google-services.json (2)
        id: GOOGLE_SERVICES_JSON_DEBUG
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: "google-services.json"
          fileDir: "./app/debug/"
          encodedString: ${{ secrets.GOOGLE_SERVICES_JSON_DEBUG }}

      - name: getting google-services.json (3)
        id: GOOGLE_SERVICES_JSON_RELEASE
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: "google-services.json"
          fileDir: "./app/release/"
          encodedString: ${{ secrets.GOOGLE_SERVICES_JSON_RELEASE }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew


      # Universal Version
      - name: Building Universal Version
        run: ./gradlew assembleUniversalRelease bundleUniversalRelease --stacktrace
        env:
          debug_url_callnow: ${{ secrets.DEBUG_URL_CALLNOW }}
          url_callnow: ${{ secrets.URL_CALLNOW }}
          debug_url_getprofile: ${{ secrets.DEBUG_URL_GETPROFILE }}
          url_getprofile: ${{ secrets.URL_GETPROFILE }}
          debug_url_ping: ${{ secrets.DEBUG_URL_PING }}
          url_ping: ${{ secrets.URL_PING }}
          url_synccontact: ${{ secrets.URL_CONTACTSYNC }}
          debug_url_synccontact: ${{ secrets.DEBUG_CONTACTSYNC_URL }}
          admob_app_id: ${{ secrets.ADMOB_APP_ID }}
          admob_ad_int_id: ${{ secrets.ADMOB_AD_INT_ID }}
          admob_ad_banner_id1: ${{ secrets.ADMOB_AD_BANNER_ID1 }}
          admob_native_ad1: ${{ secrets.AD_NATIVE1 }}
          debug_apprtc_url: ${{ secrets.DEBUG_APPRTC_URL }}
          apprtc_url: ${{ secrets.APPRTC_URL }}
          msAppCenterKey: ${{ secrets.MS_APP_CENTER_KEY }}
          debug_twilio_config_url: ${{ secrets.DEBUG_TWILIO_CONFIG_URL }}
          twilio_config_url: ${{ secrets.TWILIO_CONFIG_URL }}

      - uses: r0adkll/sign-android-release@v1
        name: Signing Universal APK
        with:
          releaseDirectory: app/build/outputs/apk/Universal/release/
          signingKeyBase64: ${{ secrets.SIGN_KEY_BASE64 }}
          alias: ${{ secrets.KEYSIGNALIAS }}
          keyStorePassword: ${{ secrets.KEYSIGNALIASPASSWORD }}
          keyPassword: ${{ secrets.KEYSIGNPASSWORD }}

      - uses: r0adkll/sign-android-release@v1
        name: Signing Universal AAB
        with:
          releaseDirectory: app/build/outputs/bundle/UniversalRelease/
          signingKeyBase64: ${{ secrets.SIGN_KEY_BASE64 }}
          alias: ${{ secrets.KEYSIGNALIAS }}
          keyStorePassword: ${{ secrets.KEYSIGNALIASPASSWORD }}
          keyPassword: ${{ secrets.KEYSIGNPASSWORD }}


      - name: upload artifact to Firebase App Distribution (APK)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: github
          file: app/build/outputs/apk/Universal/release/app-Universal-release-unsigned-signed.apk

      - name: upload artifact to Firebase App Distribution (AAB)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: github
          file: app/build/outputs/bundle/UniversalRelease/app-Universal-release.aab



      # Upload Build APK & Bundles
      - uses: actions/upload-artifact@v2
        name: Upload APK & Bundles
        with:
          name: Universal App Android Build APK AAR
          path: |
           app/build/outputs/apk/Universal/release/app-Universal-release-unsigned-signed.apk
           app/build/outputs/bundle/UniversalRelease/app-Universal-release.aab

